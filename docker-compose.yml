services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: rag_api
    shm_size: '2gb'
    mem_limit: 4g
    memswap_limit: 8g
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - ./tests:/app/tests
    environment:
      - CHROMA_HOST=chromadb
      - GEMINI_API_KEY=${GEMINI_API_KEY} # Use environment variable from host
      - MOCK_MODE=${MOCK_MODE:-false} # Enable mock mode for testing without Gemini API
    depends_on:
      chromadb:
        condition: service_healthy
      ollama:
        condition: service_healthy
    restart: on-failure

  chromadb:
    image: chromadb/chroma:0.5.3
    container_name: rag_chromadb
    ports:
      - "8001:8000"
    volumes:
      - chroma_data:/chroma/.chroma/index
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

  ingestion_runner:
    build:
      context: .
      dockerfile: Dockerfile.api
    shm_size: '2gb'
    mem_limit: 4g
    memswap_limit: 8g
    environment:
      - CHROMA_HOST=chromadb
    depends_on:
      chromadb:
        condition: service_healthy
    command: ["python", "ingest.py"]
    profiles:
      - ingest

  ollama:
    image: ollama/ollama
    container_name: rag_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 3

  setup_gemma:
    image: ollama/ollama
    container_name: setup_gemma
    command: ["pull", "gemma:2b"]
    depends_on:
      - ollama
    volumes:
      - ollama_data:/root/.ollama
    profiles:
      - setup

volumes:
  chroma_data:
  ollama_data:

